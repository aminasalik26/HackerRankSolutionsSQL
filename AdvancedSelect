## QUESTION 1) Write a query identifying the type of each record in the `TRIANGLES` table using its three side lengths. Output one of the following statements for each record in the table:

- **Equilateral**: It's a triangle with 3 sides of equal length.
- **Isosceles**: It's a triangle with 2 sides of equal length.
- **Scalene**: It's a triangle with 3 sides of differing lengths.
- **Not A Triangle**: The given values of A, B, and C don't form a triangle.

The `TRIANGLES` table is described as follows:

| Column  | Type    | Description                        |
|---------|---------|------------------------------------|
| A       | Integer | Length of side A of the triangle   |
| B       | Integer | Length of side B of the triangle   |
| C       | Integer | Length of side C of the triangle   |


## SQL SOLUTION

SELECT 
    CASE
        WHEN A + B <= C OR A + C <= B OR B + C <= A THEN 'Not A Triangle'
        WHEN A = B AND B = C THEN 'Equilateral'
        WHEN A = B OR B = C OR A = C THEN 'Isosceles'
        ELSE 'Scalene'
    END AS TRIANGLETYPE
FROM 
    TRIANGLES;




## QUESTION 2) Generate the following two result sets:

1. Query an alphabetically ordered list of all names in `OCCUPATIONS`, immediately followed by the first letter of each profession as a parenthetical 
(i.e.: enclosed in parentheses). For example: `AnActorName(A)`, `ADoctorName(D)`, `AProfessorName(P)`, and `ASingerName(S)`.
2. Query the number of occurrences of each occupation in `OCCUPATIONS`. Sort the occurrences in ascending order, and output them in the following format:
where `[occupation_count]` is the number of occurrences of an occupation in `OCCUPATIONS` and `[occupation]` is the lowercase occupation name. If more than one occupation has the same `[occupation_count]`, they should be ordered alphabetically.

**Note**: There will be at least two entries in the table for each type of occupation.

The `OCCUPATIONS` table is described as follows:

| Column      | Type    | Description                        |
|-------------|---------|------------------------------------|
| Name        | String  | Name of the person                 |
| Occupation  | String  | Occupation of the person           |


## SQL SOLUTION

### Part 1: Alphabetically Ordered List of Names with Profession Initials

SELECT 
CONCAT(Name, '(', LEFT(Occupation, 1), ')'
FROM 
 OCCUPATIONS
ORDER BY
 Name;

### Part 2: Count occurances for each occupation
SELECT 
    CONCAT('There are a total of ', COUNT(Occupation), ' ', LOWER(Occupation), 's.')
FROM 
    OCCUPATIONS
GROUP BY
    Occupation
ORDER BY
    COUNT(Occupation),
    Occupation;

